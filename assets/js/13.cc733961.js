(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{366:function(t,a,e){"use strict";e.r(a);var r=e(25),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"适配器模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#适配器模式"}},[t._v("🎋")]),t._v(" 适配器模式")]),t._v(" "),e("p",[t._v("目的：将一个接口转为另一个接口，复用接口而不改变原来的接口。")]),t._v(" "),e("h2",{attrs:{id:"实现类图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现类图"}},[t._v("🎋")]),t._v(" 实现类图")]),t._v(" "),e("p",[t._v("Java IO 流类库也有适配器模式的实现，如下为对象适配器模式的类图：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pycrab.github.io/KeepJava/assets/media/idea-patterns-adapter1.png",alt:"StringReader 适配器模式类图.png"}})]),t._v(" "),e("p",[t._v("对象适配器模式的要点：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("适配器类（StringReader）继承目标类（Reader）或者实现目标接口")])]),t._v(" "),e("li",[e("p",[t._v("适配器类（StringReader）持有被适配类（String）的对象引用（组合）")])])]),t._v(" "),e("p",[t._v("类适配器模式主要是适配器类继承被适配器类和目标类，由于 Java 只能单继承，往往是继承被适配类，并实现目标接口。")])])}),[],!1,null,null,null);a.default=s.exports}}]);