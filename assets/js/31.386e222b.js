(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{384:function(t,e,i){"use strict";i.r(e);var v=i(25),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"file-类"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#file-类"}},[t._v("🎋")]),t._v(" File 类")]),t._v(" "),i("p",[t._v("java.io 包中的 File 类，它提供了操作文件和目录的方法，但是不能读写文件。常用方法有：")]),t._v(" "),i("ul",[i("li",[t._v("创建文件对象"),i("code",[t._v("File(String pathname)")])]),t._v(" "),i("li",[t._v("判断文件是否存在"),i("code",[t._v("exists()")])]),t._v(" "),i("li",[t._v("判断是否是文件"),i("code",[t._v("isFile()")])]),t._v(" "),i("li",[t._v("判断是否是目录"),i("code",[t._v("isDirectory()")])]),t._v(" "),i("li",[t._v("返回文件或目录名"),i("code",[t._v("getName()")])]),t._v(" "),i("li",[t._v("返回绝对路径"),i("code",[t._v("getAbsolutePath()")])]),t._v(" "),i("li",[t._v("返回文件列表"),i("code",[t._v("listFiles()")])]),t._v(" "),i("li",[t._v("根据当前路径创建文件目录"),i("code",[t._v("mkdirs()")])]),t._v(" "),i("li",[t._v("原子操作，检查文件是否存在，不存在创建新文件"),i("code",[t._v("createNewFile()")])]),t._v(" "),i("li",[t._v("删除文件，删除目录时目录下必须为空"),i("code",[t._v("delete()")])]),t._v(" "),i("li",[t._v("转换为 Path 对象"),i("code",[t._v("toPath()")])])]),t._v(" "),i("h2",{attrs:{id:"files-类"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#files-类"}},[t._v("🎋")]),t._v(" Files 类")]),t._v(" "),i("p",[t._v("java.nio.file 包将文件和路径分开，即 Files 类与 Path 类，两者一起提供了操作文件、目录和其它类型文件的方法，它增强了文件操作，可以打开文件流进行读写操作，对 File 类方法调用失败不会抛出具体异常等缺点进行改进，IO 操作是安全的。")]),t._v(" "),i("ul",[i("li",[t._v("文件路径 Path\n"),i("ul",[i("li",[t._v("创建路径对象"),i("code",[t._v("of(String first, String... more)")])])])]),t._v(" "),i("li",[t._v("文件操作 Files\n"),i("ul",[i("li",[t._v("判断文件是否存在"),i("code",[t._v("exists(Path path, LinkOption... options)")])]),t._v(" "),i("li",[t._v("判断两个路径是否是同一个文件"),i("code",[t._v("isSameFile(Path path, Path path2)")])]),t._v(" "),i("li",[t._v("判断是否是常规文件"),i("code",[t._v("isRegularFile(Path path, LinkOption... options)")])]),t._v(" "),i("li",[t._v("判断是否是符号链接"),i("code",[t._v("isSymbolicLink(Path path)")])]),t._v(" "),i("li",[t._v("判断是否是文件目录"),i("code",[t._v("isDirectory(Path path, LinkOption... options)")])]),t._v(" "),i("li",[t._v("读取文件所有内容（注意仅用于小文件，防止内存耗尽）\n"),i("ul",[i("li",[i("code",[t._v("readAllBytes(Path path)")])]),t._v(" "),i("li",[i("code",[t._v("readString(Path path, Charset cs)")])]),t._v(" "),i("li",[i("code",[t._v("readAllLines(Path path, Charset cs)")])])])]),t._v(" "),i("li",[t._v("写文件\n"),i("ul",[i("li",[i("code",[t._v("write(Path path, byte[] bytes, OpenOption... options)")])]),t._v(" "),i("li",[i("code",[t._v("writeString(Path path, CharSequence csq, Charset cs, OpenOption... options)")])])])]),t._v(" "),i("li",[t._v("打开文件流\n"),i("ul",[i("li",[i("code",[t._v("newInputStream(Path path, OpenOption... options)")])]),t._v(" "),i("li",[i("code",[t._v("newOutputStream(Path path, OpenOption... options)")])])])]),t._v(" "),i("li",[t._v("创建文件，可以添加参数，选择何时销毁的钩子\n"),i("ul",[i("li",[i("code",[t._v("createFile(Path path, FileAttribute<?>... attrs)")])]),t._v(" "),i("li",[i("code",[t._v("createTempFile(Path dir, String prefix, String suffix, FileAttribute<?>... attrs)")])])])]),t._v(" "),i("li",[t._v("删除文件\n"),i("ul",[i("li",[i("code",[t._v("delete(Path path)")])]),t._v(" "),i("li",[i("code",[t._v("deleteIfExists(Path path)")])])])])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);